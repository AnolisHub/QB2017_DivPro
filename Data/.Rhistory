author: "Katie Beidler"
warnings()
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
Sys.setenv("DISPLAY"=":0")
require(shiny)
title: 'Assignment: Temporal Diversity'
author: 'Katie Beidler; Z620: Quantitative Biodiversity, Indiana University'
date: "`r format(Sys.time(), '%d %B, %Y')`"
output: pdf_document
geometry: margin=2.54cm
sessionInfo()
locale
knit_with_parameters('~/GitHub/QB2017_Beidler/Week5-Temporal/temporal_assignment.Rmd')
# Chunk 1: setup
clr = function() {
ENV = globalenv()
ll = ls(envir = ENV)
ll = ll[ll != "clr"]
rm(list = ll, envir = ENV)
}
getwd()
setwd("/Users/bhbeidler/GitHub/QB2017_DivPro/Data")
#setwd("C:\\Users\\rmoge\\GitHub\\QB2017_DivPro\\Data")
# Chunk 2
package.list = c('vegan', 'tidyr', 'dplyr', 'codyn', 'ggplot2','betapart','splitstackshape','cowplot', 'MullerPlot','scales','grid','RColorBrewer','lubridate', 'reshape2', 'lubridate','multcomp','TTR', 'xtable', 'pander', 'png', 'grid', 'tseries', 'nlme', 'forecast', 'lsmeans', 'devtools')
for (package in package.list) {
if (!require(package, character.only = TRUE, quietly = TRUE)) {
install.packages(package, repos='http://cran.us.r-project.org')
library(package, character.only = TRUE) }
}
# Chunk 3
setwd("/Users/bhbeidler/GitHub/QB2017_DivPro/Data")
plant = read.csv("./HF_plants_treat.csv")
nmin = read.csv("./HF_nmin.csv", stringsAsFactors = FALSE)
resp = read.csv("./HF_soilresp.csv", stringsAsFactors = FALSE)
#plant = read.csv("C:\\Users\\rmoge\\GitHub\\QB2017_DivPro\\Data\\HF_plants_treat.csv")
#nmin = read.csv("C:\\Users\\rmoge\\GitHub\\QB2017_DivPro\\Data\\HF_nmin.csv", stringsAsFactors = FALSE)
#resp = read.csv("C:\\Users\\rmoge\\GitHub\\QB2017_DivPro\\Data\\HF_soilresp.csv", stringsAsFactors = FALSE)
# Chunk 4
# Making the Site by Species Matrix for the plant data set
plant_sbys = plant[ ,6:43]
# Subsetting the data into the different years
plant_06 = (filter(plant, year == 2006))
plant_07 = (filter(plant, year == 2007))
plant_08 = (filter(plant, year == 2008))
plant_09 = (filter(plant, year == 2009))
# Separating out the treatments from the site by species matrices
plant_06_sbys = plant_06[ ,6:43]
plant_07_sbys = plant_07[ ,6:43]
plant_08_sbys = plant_08[ ,6:43]
plant_09_sbys = plant_09[ ,6:43]
# Chunk 5
# Visualizing the Plant data set
str(plant, max.level = 1)
# Calculate observed richness from time-by-species matrix
p_richness = as.data.frame(rowSums(plant[,-c(1:5)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant[,1:5,], p_richness)
# Rename column
names(p_rich.all)[6] = "richness"
# avg. richness per group
# stand. dev. per group
# num. obs. per group
# calc. std. err. mean.
p_rich.treat.plot = group_by(p_rich.all, treatment, year) %>%
summarise(mean = mean(richness), sd = sd(richness),n = n(),sem = sd/sqrt(n))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=15)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color ="black"))
plot(p_rich.plot)
# Calculate diveristy from time-by-species matrix
p_diversity = diversity(plant[,-c(1:5)], "shannon")
# Create data frame with experimental design and diversity data
p_div.all = data.frame(plant[,1:5,], p_diversity)
# Rename column
names(p_div.all)[6] = "diversity"
p_div.treat.plot = group_by(p_div.all, treatment, year) %>%
summarise(mean = mean(diversity), sd = sd(diversity),n = n(),sem = sd/sqrt(n))
p_div.plot = ggplot(p_div.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlim(2006, 2009) + xlab("Year") + ylab("Shannon's Diversity Index")+
theme_classic(base_size=15)+
theme(axis.line.x = element_line(color = "black"),axis.line.y = element_line(color = "black"))
plot(p_div.plot)
# Chunk 6
p_rich.rm = lme(richness ~ year + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all)
summary(p_rich.rm) # Obtain F-test
anova(p_rich.rm)
# Make cleaner ANOVA table
set.caption("RMANOVA for Plant Richness Data")
pander(anova(p_rich.rm))
# Perform an RM-ANOVA and construct a F-test using the AR(1)
p_div.rm = lme(diversity ~ as.factor(year) + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_div.all) # Look at detailed output
summary(p_div.rm)
anova(p_div.rm)
set.caption("RMANOVA for Plant Diversity Data")
pander(anova(p_div.rm))
# Chunk 7
# Making the wide site by species format into a long format- to get abundances for each species
plant$row_id = 1:nrow(plant)
p.id = dplyr::select(plant, row_id, year, treatment)
plant.m = as.matrix(plant_sbys)
m1 = setNames(melt(plant.m), c('row_id','species','count'))
m2 = dplyr::filter(m1, count > 0)
m3 = expandRows(m2, "count")
plant_long = left_join(p.id,m3, by = "row_id")
p_long = dplyr::select(plant_long, -row_id)
# Calculate species abundances for each taxonomic group
plant.sp.abunds = p_long %>%
group_by(year,treatment) %>%
count(species)
write.csv(plant.sp.abunds, file = "plant abundances")
# Calculate total turnover
plant.total = turnover(df = plant.sp.abunds, time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment",
metric = "total")
# Calculate species gained
plant.appearance = turnover(df = plant.sp.abunds, time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment",
metric = "appearance")
# Calculate species lost
plant.disappearance = turnover(df = plant.sp.abunds, time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment",
metric = "disappearance")
plant.turnover = full_join(plant.total, plant.disappearance) %>%
full_join(plant.appearance)
plant.turnover = gather(plant.turnover, key = metric, value = turnover, total, appearance, disappearance)
View(plant.turnover)
# 3. Visualize turnover within each group
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = turnover, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
scale_color_manual(values = c("#999999", "#E69F00","#8B7765", "#000000"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))+
theme_bw(base_size=20)
plot(plant.turn.plot)
# Low turnover is indicative of a stable community and high turnover is indicative of a dynamic community
# Abundance Plot treatment by year
p_abun.plot1 = ggplot(plant.sp.abunds, aes(year, n, color= as.factor(treatment))) +
geom_point() +
geom_line(aes(color = as.factor(treatment))) +
facet_wrap(~species, nrow = 8) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
ylab("# of  Stems") +
theme_bw(base_size=15) +
theme(axis.text.x = element_text(angle=70, vjust=0.5))
plot(p_abun.plot1)
# Abundances across years
p_abun.plot2 = ggplot(plant.sp.abunds , aes(x = species, y = n)) +
geom_bar(stat = "identity") +
facet_wrap(~year, ncol = 1) +
ylab("# of  Stems") +
theme_bw(base_size=25) +
theme(axis.text.x = element_text(angle=70, vjust=0.5))
plot(p_abun.plot2)
# Chunk 8
# Calculate species abundances for each treatment group
plant.sp.abunds = p_long %>%
group_by(year,treatment) %>%
count(species)
# Calculate MRS
plant.rankshift = rank_shift(df = as.data.frame(plant.sp.abunds),
time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment")
plant.rankshift$year = as.numeric(substr(plant.rankshift$year_pair, 6, 9))
# Create ggplot
rankshift.plot =  ggplot(plant.rankshift, aes(x = year, y = MRS, color = treatment)) + geom_line(size = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Mean Rank Shift") + scale_color_grey()
plot(rankshift.plot)
plant.rankshift %>%
group_by (treatment) %>%
summarise(mean = mean(MRS), cv = sd(MRS)/mean)
# Rank Clock
ag_plant.dat = aggregate(n ~ species * year * treatment,
data = subset(plant.sp.abunds,
species == "denpun" |
species == "maican" |
species == "mitrep"|
species == "gaupro"), FUN = mean)
write.csv(ag_plant.dat, file = "dominant plant abundances.csv")
rclock_plot = ggplot(ag_plant.dat, aes(year, n, color = species)) +
geom_line(size = 1) + coord_polar() + theme_bw(base_size = 25) +
facet_wrap(~treatment) +
ylab("# of Stems") +
scale_color_manual(values = c("#2F4F4F", "#FF4040", "#8FBC8F", "#C0C0C0")) +
ggtitle("Dominant species abundances \n for the different soil treatments, Harvard Forest \n")
plot(rclock_plot)
# Species Codes: Denpun = Dennstaedtia punctilobula, Gauopro = Gaultheria procumbens, maican = Maianthemum canadense, vaccpp = number of stems of Vaccinium species (corymbosum, angustifolium, vacillans)
# Chunk 9
# Soil respiration
resp = resp %>%
filter(year %in% c( "2006","2007", "2008", "2009"))
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$doy = yday(resp$date)
resp = na.exclude(resp)
resp_yr.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
facet_wrap(~year, ncol = 1) +
xlab("Day of the Year") +
ylab("CO2 Flux")
resp_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
plot(resp_yr.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth") +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.5, alpha =0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux(mg C m-2 h-1)") +
theme(text = element_text(size=20))
plot(resp_trt.plot)
# N mineralization
nmin = nmin %>%
filter(year %in% c("2006","2007", "2008", "2009"))
nmin$date = as.Date(nmin$date, format = "%m/%d/%Y")
nmin$doy = yday(nmin$date)
nmin = na.exclude(nmin)
n03_yr.plot = qplot(doy, netno3, data = nmin,colour = as.factor(year), geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Day of the Year") +
ylab("Net Nitrate")
n03_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil NO3 2006-2009")
plot(n03_yr.plot)
no3_trt.plot = qplot(doy, netnh4, data = nmin, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 0.75) +
facet_wrap(hor~year) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("Total NO3)") + theme(text = element_text(size=18))
plot(no3_trt.plot)
# Chunk 10
# Soil Respiration
resp.treat.mean = group_by(resp, trt) %>%
summarise(mean = mean(co2flux), sd = sd(co2flux),n = n(),sem = sd/sqrt(n))
# Trying different variance - covariance structures
# AR(1) covariance structure
soil.rm1 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = resp)
summary(soil.rm1) # Obtain F-test
anova(soil.rm1)
# corARMA autoregressive moving average proccess
soil.rm2 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCompSymm(form = ~ 1 | plot),data = resp) #
summary(soil.rm2) # Obtain F-test
anova(soil.rm2)
# cirCAR1 cnt AR process
soil.rm3 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCAR1(form = ~ 1 | plot),data = resp)
summary(soil.rm3) # Obtain F-test
anova(soil.rm3)
# corARMA autoregressive moving average process, with arbitrary components
soil.rm4 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corARMA(form = ~ 1 | plot, p = 1, q = 1),data = resp)
summary(soil.rm4) # Obtain F-test
anova(soil.rm4)
#corExp exponential spatial correlation.
soil.rm5 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corExp(form = ~ 1 | plot),data = resp)
summary(soil.rm5) # Obtain F-test
anova(soil.rm5)
# CorGaus Gaussian spatial correlation.
soil.rm6 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corGaus(form = ~ 1 | plot),data = resp)
summary(soil.rm6) # Obtain F-test
anova(soil.rm6)
# corLin	linear spatial correlation.
soil.rm7 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corLin(form = ~ 1 | plot),data = resp) #
summary(soil.rm7) # Obtain F-test
anova(soil.rm7)
# corRatio	Rational quadratics spatial correlation.
soil.rm8 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corRatio(form = ~ 1 | plot),data = resp) #
summary(soil.rm8) # Obtain F-test
anova(soil.rm8)
# corRatioSpher	spherical spatial correlation
soil.rm9 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corSpher(form = ~ 1 | plot),data = resp) #
summary(soil.rm9) # Obtain F-test
anova(soil.rm9)
# corSymm general correlation matrix, with no additional structure
soil.rm10 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corSpher(form = ~ 1 | plot),data = resp) #
summary(soil.rm10) # Obtain F-test
anova(soil.rm10)
# Compare the AICs
AIC(soil.rm1, soil.rm2, soil.rm3,soil.rm4, soil.rm5, soil.rm6,soil.rm7,soil.rm8,soil.rm9,soil.rm10)
# The unstructured covariance matrix has the lowest AIC score
# N Minearlization
nmin.treat.plot = group_by(nmin, trt, year) %>%
summarise(mean = mean(netno3), sd = sd(netno3),n = n(),sem = sd/sqrt(n))
# Trying different variance - covariance structures
# AR(1) covariance structure
nmin.rm1 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = nmin)
summary(nmin.rm1)
anova(nmin.rm1)
# corARMA autoregressive moving average proccess
nmin.rm2 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCompSymm(form = ~ 1 | plot),data = nmin) #
summary(nmin.rm2)
anova(nmin.rm2)
# cirCAR1 cnt AR process
nmin.rm3 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCAR1(form = ~ 1 | plot),data = nmin)
summary(nmin.rm3)
anova(nmin.rm3)
# corARMA autoregressive moving average process, with arbitrary components
nmin.rm4 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corARMA(form = ~ 1 | plot, p = 1, q = 1),data = nmin)
summary(nmin.rm4)
anova(nmin.rm4)
#corExp exponential spatial correlation.
nmin.rm5 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corExp(form = ~ 1 | plot),data = nmin)
summary(nmin.rm5)
anova(nmin.rm5)
# CorGaus Gaussian spatial correlation.
nmin.rm6 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corGaus(form = ~ 1 | plot),data = nmin)
summary(nmin.rm6)
anova(nmin.rm6)
# corLin	linear spatial correlation.
nmin.rm7 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corLin(form = ~ 1 | plot),data = nmin)
summary(nmin.rm7)
anova(nmin.rm7)
# corRatio	Rational quadratics spatial correlation.
nmin.rm8 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corRatio(form = ~ 1 | plot),data = nmin)
summary(nmin.rm8)
anova(nmin.rm8)
# corRatioSpher	spherical spatial correlation
nmin.rm9 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corSpher(form = ~ 1 | plot),data = nmin)
summary(nmin.rm9)
anova(nmin.rm9)
# corSymm general correlation matrix, with no additional structure
nmin.rm10 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corSpher(form = ~ 1 | plot),data = nmin)
summary(nmin.rm10)
anova(nmin.rm10)
# Compare the AICs
AIC(nmin.rm1, nmin.rm2, nmin.rm3,nmin.rm4, nmin.rm5, nmin.rm6,nmin.rm7,nmin.rm8,nmin.rm9,nmin.rm10)
rankshift.plot =  ggplot(plant.rankshift, aes(x = year, y = MRS, color = treatment)) + geom_line(size = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Mean Rank Shift") + scale_color_grey()
plot(rankshift.plot)
plant.rankshift %>%
group_by (treatment) %>%
summarise(mean = mean(MRS), cv = sd(MRS)/mean)
rankshift.plot =  ggplot(plant.rankshift, aes(x = year, y = MRS, color = treatment)) + geom_line(size = 1) +
xlim(2007, 2009) +
xlab("Year") +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))
plot(rankshift.plot)
rankshift.plot =  ggplot(plant.rankshift, aes(x = year, y = MRS, color = treatment)) + geom_line(size = 1) +
xlim(2007, 2009) +
xlab("Year") +
scale_color_manual(values = c("#999999", "#E69F00", "#8B7765", "#000000"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))
plot(rankshift.plot)
plant.rankshift %>%
group_by (treatment) %>%
summarise(mean = mean(MRS), cv = sd(MRS)/mean)
p_rich.rm = lme(richness ~ year + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all)
summary(p_rich.rm)
View(resp)
resp = read.csv("./HF_soilresp.csv", stringsAsFactors = FALSE)
View(resp)
