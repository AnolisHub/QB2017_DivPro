ylab("Turnover")
plant.turn.plot2 = ggplot(total.turnover, aes(x = year, y = turnover, color = as.factor(treatment))) +
geom_line(size = 1) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized")) +
xlab("Year") +
ylab("Turnover")
plot(plant.turn.plot2)
plant.turn.plot2 = ggplot(total.turnover, aes(x = year, y = turnover, color = as.factor(treatment))) +
geom_line(size = 1) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized")) +
xlab("Year") +
ylab("Turnover") +
theme(legend.position = "bottom")
plot(plant.turn.plot2)
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = total, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
theme(legend.position = "bottom") +
scale_color_grey()
plot(plant.turn.plot)
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = turnover, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
theme(legend.position = "bottom") +
scale_color_grey()
plot(plant.turn.plot)
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = turnover, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
theme(legend.position = "bottom") +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))
plot(plant.turn.plot)
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = turnover, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))
plot(plant.turn.plot)
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = turnover, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))+
theme_classic(base_size=20)
plot(plant.turn.plot)
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = turnover, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))+
theme_bw(base_size=20)
plot(plant.turn.plot)
# Calculate species abundances for each taxonomic group
plant.sp.abunds = p_long %>%
group_by(year,treatment) %>%
count(species)
# Calculate MRS
plant.rankshift = rank_shift(df = as.data.frame(plant.sp.abunds),
time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment")
plant.rankshift$year = as.numeric(substr(plant.rankshift$year_pair, 6, 9))
# Create ggplot
rankshift.plot =  ggplot(plant.rankshift, aes(x = year, y = MRS, color = treatment)) + geom_line(size = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Mean Rank Shift") + scale_color_grey()
plot(rankshift.plot)
plant.rankshift %>%
group_by (treatment) %>%
summarise(mean = mean(MRS), cv = sd(MRS)/mean)
# Rank Clock
ag_plant.dat = aggregate(n ~ species * year * treatment,
data = subset(plant.sp.abunds,
species == "denpun" |
species == "maican" |
species == "mitrep"|
species == "gaupro"), FUN = mean)
rclock_plot = ggplot(ag_plant.dat, aes(year, n, color = species)) +
geom_line(size = 1) + coord_polar() + theme_bw(base_size = 25) +
facet_wrap(~treatment) +
ylab("# of Stems") +
scale_color_manual(values = c("#2F4F4F", "#FF4040", "#8FBC8F", "#C0C0C0")) +
ggtitle("Dominant species abundances \n for the different soil treatments, Harvard Forest \n")
plot(rclock_plot)
# Species Codes: Denpun = Dennstaedtia punctilobula, Gauopro = Gaultheria procumbens, maican = Maianthemum canadense, vaccpp = number of stems of Vaccinium species (corymbosum, angustifolium, vacillans)
# Soil respiration
resp = resp %>%
filter(year %in% c( "2006","2007", "2008", "2009"))
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$doy = yday(resp$date)
resp = na.exclude(resp)
resp_yr.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
facet_wrap(~year, ncol = 1) +
xlab("Day of the Year") +
ylab("CO2 Flux")
resp_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
plot(resp_yr.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
facet_wrap(~year, ncol = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("CO2 Flux)") + theme(text = element_text(size=18))
plot(resp_trt.plot)
# N mineralization
nmin = nmin %>%
filter(year %in% c("2006","2007", "2008", "2009"))
nmin$date = as.Date(nmin$date, format = "%m/%d/%Y")
nmin$doy = yday(nmin$date)
nmin = na.remove(nmin)
n03_yr.plot = qplot(doy, netno3, data = nmin, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
facet_wrap(hor~year) +
xlab("Day of the Year") +
ylab("Net Nitrate")
n03_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil NO3 2006-2009")
plot(n03_yr.plot)
nh4_yr.plot = qplot(doy, netnh4, data = nmin, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
facet_wrap(hor~year) +
xlab("Day of the Year") +
ylab("Net Ammonium")
nh4_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil NO3 2006-2009")
plot(nh4_yr.plot)
no3_trt.plot = qplot(doy, netnh4, data = nmin, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
facet_wrap(hor~year) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("Total NO3)") + theme(text = element_text(size=18))
plot(no3_trt.plot)
nh4_trt.plot = qplot(doy, netnh4, data = nmin, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
facet_wrap(hor~year) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
nh4_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("Total NH4)") + theme(text = element_text(size=18))
plot(nh4_trt.plot)
resp_yr.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
facet_wrap(~year, ncol = 1) +
xlab("Day of the Year") +
ylab("CO2 Flux")
resp_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
plot(resp_yr.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
facet_wrap(~year, ncol = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("CO2 Flux)") + theme(text = element_text(size=18))
plot(resp_trt.plot)
soil.rm10 = lme(co2flux ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corSpher(form = ~ 1 | plot),data = resp) #
summary(soil.rm10) # Obtain F-test
anova(soil.rm10)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("CO2 Flux)") + theme(text = element_text(size=18))
plot(resp_trt.plot)
qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
ylab("# of  Stems") +
theme_bw(base_size=15)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
ylab("# of  Stems") +
theme(text = element_text(size=18)
plot(resp_trt.plot)
qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
ylab("# of  Stems") +
theme(text = element_text(size=18))
View(resp)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux") +
theme(text = element_text(size=18))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 0.75) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux") +
theme(text = element_text(size=18))
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 0.75) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux") +
theme(text = element_text(size=18))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.75) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux") +
theme(text = element_text(size=18))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.5) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux") +
theme(text = element_text(size=18))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.5, alpha =0.3) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux") +
theme(text = element_text(size=18))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.5, alpha =0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux") +
theme(text = element_text(size=18))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.5, alpha =0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux(mg C m-2 h-1)") +
theme(text = element_text(size=18))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.5, alpha =0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux(mg C m-2 h-1)") +
theme(text = element_text(size=22))
plot(resp_trt.plot)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = TRUE, formula = y ~ x, size = 0.5, alpha =0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil  Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
xlab("Day of the Year") +
ylab("Soil CO2 Eflux(mg C m-2 h-1)") +
theme(text = element_text(size=20))
plot(resp_trt.plot)
plant.sp.abunds = p_long %>%
group_by(year,treatment) %>%
count(species)
View(plant.sp.abunds)
ag_plant.dat = aggregate(n ~ species * year * treatment,
data = subset(plant.sp.abunds,
species == "denpun" |
species == "maican" |
species == "mitrep"|
species == "gaupro"), FUN = mean)
View(ag_plant.dat)
View(nmin)
nmin.treat.plot = group_by(nmin, trt, year) %>%
summarise(mean = mean(netno3), sd = sd(netno3),n = n(),sem = sd/sqrt(n))
View(nmin)
nmin.treat.plot = group_by(nmin, trt, year) %>%
summarise(mean = mean(netno3), sd = sd(netno3),n = n(),sem = sd/sqrt(n))
View(nmin.treat.plot)
nmin = nmin %>%
filter(year %in% c("2006","2007", "2008", "2009"))
nmin$date = as.Date(nmin$date, format = "%m/%d/%Y")
nmin$doy = yday(nmin$date)
nmin = na.remove(nmin)
nmin.treat.plot = group_by(nmin, trt, year) %>%
summarise(mean = mean(netno3), sd = sd(netno3),n = n(),sem = sd/sqrt(n))
View(nmin.treat.plot)
nmin.rm1 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = nmin)
summary(nmin.rm1) # Obtain F-test
anova(nmin.rm1)
nmin = nmin %>%
filter(year %in% c("2006","2007", "2008", "2009"))
nmin$date = as.Date(nmin$date, format = "%m/%d/%Y")
nmin$doy = yday(nmin$date)
nmin = na.exclude(nmin)
# N Minearlization
nmin.treat.plot = group_by(nmin, trt, year) %>%
summarise(mean = mean(netno3), sd = sd(netno3),n = n(),sem = sd/sqrt(n))
# Trying different variance - covariance structures
# AR(1) covariance structure
nmin.rm1 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = nmin)
summary(nmin.rm1)
anova(nmin.rm1)
# corARMA autoregressive moving average proccess
nmin.rm2 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCompSymm(form = ~ 1 | plot),data = nmin) #
summary(nmin.rm2)
anova(nmin.rm2)
# cirCAR1 cnt AR process
nmin.rm3 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCAR1(form = ~ 1 | plot),data = nmin)
summary(nmin.rm3)
anova(nmin.rm3)
# corARMA autoregressive moving average process, with arbitrary components
nmin.rm4 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corARMA(form = ~ 1 | plot, p = 1, q = 1),data = nmin)
summary(nmin.rm4)
anova(nmin.rm4)
#corExp exponential spatial correlation.
min.rm5 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corExp(form = ~ 1 | plot),data = nmin)
summary(nmin.rm5)
anova(nmin.rm5)
# N Minearlization
nmin.treat.plot = group_by(nmin, trt, year) %>%
summarise(mean = mean(netno3), sd = sd(netno3),n = n(),sem = sd/sqrt(n))
# Trying different variance - covariance structures
# AR(1) covariance structure
nmin.rm1 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = nmin)
summary(nmin.rm1)
anova(nmin.rm1)
# corARMA autoregressive moving average proccess
nmin.rm2 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCompSymm(form = ~ 1 | plot),data = nmin) #
summary(nmin.rm2)
anova(nmin.rm2)
# cirCAR1 cnt AR process
nmin.rm3 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corCAR1(form = ~ 1 | plot),data = nmin)
summary(nmin.rm3)
anova(nmin.rm3)
# corARMA autoregressive moving average process, with arbitrary components
nmin.rm4 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corARMA(form = ~ 1 | plot, p = 1, q = 1),data = nmin)
summary(nmin.rm4)
anova(nmin.rm4)
#corExp exponential spatial correlation.
nmin.rm5 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corExp(form = ~ 1 | plot),data = nmin)
summary(nmin.rm5)
anova(nmin.rm5)
# CorGaus Gaussian spatial correlation.
nmin.rm6 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corGaus(form = ~ 1 | plot),data = nmin)
summary(nmin.rm6)
anova(nmin.rm6)
# corLin	linear spatial correlation.
nmin.rm7 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corLin(form = ~ 1 | plot),data = nmin)
summary(nmin.rm7)
anova(nmin.rm7)
# corRatio	Rational quadratics spatial correlation.
nmin.rm8 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corRatio(form = ~ 1 | plot),data = nmin)
summary(nmin.rm8)
anova(nmin.rm8)
# corRatioSpher	spherical spatial correlation
nmin.rm9 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corSpher(form = ~ 1 | plot),data = nmin)
summary(nmin.rm9)
anova(nmin.rm9)
# corSymm general correlation matrix, with no additional structure
nmin.rm10 = lme(netno3 ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corSpher(form = ~ 1 | plot),data = nmin)
summary(nmin.rm10)
anova(nmin.rm10)
# Compare the AICs
AIC(nmin.rm1, nmin.rm2, nmin.rm3,nmin.rm4, nmin.rm5, nmin.rm6,nmin.rm7,nmin.rm8,nmin.rm9,nmin.rm10)
summary(nmin.rm1)
anova(nmin.rm1)
n03_yr.plot = qplot(doy, netno3, data = nmin, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
facet_wrap(hor~year) +
xlab("Day of the Year") +
ylab("Net Nitrate")
n03_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil NO3 2006-2009")
plot(n03_yr.plot)
qplot(doy, netno3, data = nmin, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
facet_wrap(~year) +
xlab("Day of the Year") +
ylab("Net Nitrate")
n03_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil NO3 2006-2009")
plot(n03_yr.plot)
qplot(doy, netno3, data = nmin, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black"))
n03_yr.plot = qplot(doy, netno3, data = nmin,colour = as.factor(year), geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Day of the Year") +
ylab("Net Nitrate")
n03_yr.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil NO3 2006-2009")
plot(n03_yr.plot)
resp = resp %>%
filter(year %in% c( "2006","2007", "2008", "2009"))
View(resp)
resp = resp %>%
filter(year %in% c( "2006","2007", "2008", "2009"))
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$doy = yday(resp$date)
resp = na.exclude(resp)
resp.treat.mean = group_by(resp, trt, year) %>%
summarise(mean = mean(co2flux), sd = sd(co2flux),n = n(),sem = sd/sqrt(n))
View(resp)
View(resp.treat.mean)
plant.total = turnover(df = plant.sp.abunds, time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment",
metric = "total")
# Making the wide site by species format into a long format- to get abundances for each species
plant$row_id = 1:nrow(plant)
p.id = dplyr::select(plant, row_id, year, treatment)
plant.m = as.matrix(plant_sbys)
m1 = setNames(melt(plant.m), c('row_id','species','count'))
m2 = dplyr::filter(m1, count > 0)
m3 = expandRows(m2, "count")
plant_long = left_join(p.id,m3, by = "row_id")
p_long = dplyr::select(plant_long, -row_id)
# Calculate species abundances for each taxonomic group
plant.sp.abunds = p_long %>%
group_by(year,treatment) %>%
count(species)
# Calculate total turnover
plant.total = turnover(df = plant.sp.abunds, time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment",
metric = "total")
# Calculate species gained
plant.appearance = turnover(df = plant.sp.abunds, time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment",
metric = "appearance")
# Calculate species lost
plant.disappearance = turnover(df = plant.sp.abunds, time.var = "year",
species.var = "species",
abundance.var = "n",
replicate.var = "treatment",
metric = "disappearance")
plant.turnover = full_join(plant.total, plant.disappearance) %>%
full_join(plant.appearance)
plant.turnover = gather(plant.turnover, key = metric, value = turnover, total, appearance, disappearance)
View(plant.turnover)
# 3. Visualize turnover within each group
plant.turn.plot = ggplot(plant.turnover, aes(x = year, y = turnover, color = treatment)) +
geom_line(size = 1, show.legend = T) + facet_wrap(~metric, ncol = 1) +
xlim(2007, 2009) +
xlab("Year") +
ylab("Turnover") +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))+
theme_bw(base_size=20)
plot(plant.turn.plot)
# Low turnover is indicative of a stable community and high turnover is indicative of a dynamic community
# Abundance Plot treatment by year
p_abun.plot1 = ggplot(plant.sp.abunds, aes(year, n, color= as.factor(treatment))) +
geom_point() +
geom_line(aes(color = as.factor(treatment))) +
facet_wrap(~species, nrow = 8) +
scale_color_manual(values = c("#999999", "#E69F00", "#000000", "#8B7765"),name="Soil Treatment",labels=c("Unheated-Unfertilized", "Heated-Unfertilized", "Heated- Fertilized", "Unheated-Fertilized"))  +
ylab("# of  Stems") +
theme_bw(base_size=15) +
theme(axis.text.x = element_text(angle=70, vjust=0.5))
plot(p_abun.plot1)
# Abundances across years
p_abun.plot2 = ggplot(plant.sp.abunds , aes(x = species, y = n)) +
geom_bar(stat = "identity") +
facet_wrap(~year, ncol = 1) +
ylab("# of  Stems") +
theme_bw(base_size=25) +
theme(axis.text.x = element_text(angle=70, vjust=0.5))
plot(p_abun.plot2)
resp.treat.mean = group_by(resp, trt) %>%
summarise(mean = mean(co2flux), sd = sd(co2flux),n = n(),sem = sd/sqrt(n))
View(resp.treat.mean)
