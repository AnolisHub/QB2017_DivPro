}
plant = read.csv("./Data/HF_plants.csv")
plant_treat = read.csv("./Data/HF_plants_treat.csv")
ant = read.csv("./Data/HF_ants.csv")
nmin = read.csv("./Data/HF_nmin.csv")
resp = read.csv("./Data/HF_soilresp.csv")
temp = read.csv("./Data/HF_soiltemp.csv")
plant_sbys = plant[ ,4:43]
plant_06 = (filter(plant, year == 2006))
plant_07 = (filter(plant, year == 2007))
plant_08 = (filter(plant, year == 2008))
plant_09 = (filter(plant, year == 2009))
plant_06_sbys = plant_06[ ,4:43]
plant_07_sbys = plant_07[ ,4:43]
plant_08_sbys = plant_08[ ,4:43]
plant_09_sbys = plant_09[ ,4:43]
# Ordination
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2008.db") for 2008
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
# Calculate the variation explained by the first three axes in your ordination
explainvar1.p = round(plant_08.pcoa$eig[1] / sum(plant_08.pcoa$eig), 3) * 100
explainvar2.p = round(plant_08.pcoa$eig[2] / sum(plant_08.pcoa$eig), 3) * 100
explainvar3.p = round(plant_08.pcoa$eig[3] / sum(plant_08.pcoa$eig), 3) * 100
sum.eig = sum(explainvar1.p, explainvar2.p, explainvar3.p)
# plot the PCoA ordination
# Define Plot Parameters
par(mar = c(5, 5, 1, 2) + 0.1)
# Initiate Plot
plot(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
xlab = paste("PCoA 1 (", explainvar1.p, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2.p, "%)", sep = ""),
main = "Ordination for 2008",
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
# Add Axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
# Add Points & Labels
points(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
labels = plant_08$treatment)
# Identify influential species
# First we calculate the relative abundances of each species at each site
plant_08REL = plant_08_sbys
for(i in 1:nrow(plant_08_sbys )){
plant_08REL[i, ] = plant_08_sbys [i, ] / sum(plant_08_sbys [i, ])
}
# Now, we use this information to calculate and add species scores
plant_08.pcoa= add.spec.scores(plant_08.pcoa,plant_08REL,method = "pcoa.scores")
text(plant_08.pcoa$cproj[ ,1], plant_08.pcoa$cproj[ ,2],
labels = row.names(plant_08.pcoa$cproj), col = "red")
# Hypothesis Testing
# Soil treatment (either warming or N fertilization) influenced tree beta diversity during 2006.
# Multivariate Procedures for Categorical designs
# There are 40 tree species. For each year and each treatment there are 6 sites. Treatments include: 1=control, 2=warm, 3=nitrogen, 4=warm/nitrogen
# Create "Factors" vector for categorizing soil treatments
soil_treat = as.factor(plant_06[ ,3])
# Run PERMANOVA with adonis function
P_PERMA.06 = adonis(plant_06_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
plant_06_sbys = plant_06[ ,4:43]
plant_07_sbys = plant_07[ ,4:43]
plant_08_sbys = plant_08[ ,4:43]
plant_09_sbys = plant_09[ ,4:43]
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2008.db") for 2008
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
View(plant_08_sbys)
plant = read.csv("./Data/HF_plants.csv")
View(plant)
plant = read.csv("./Data/HF_plants.csv")
View(plant)
plant = read.csv("./Data/HF_plants.csv")
plant_treat = read.csv("./Data/HF_plants_treat.csv")
ant = read.csv("./Data/HF_ants.csv")
nmin = read.csv("./Data/HF_nmin.csv")
resp = read.csv("./Data/HF_soilresp.csv")
temp = read.csv("./Data/HF_soiltemp.csv")
# Ordination
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2008.db") for 2008
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
# Calculate the variation explained by the first three axes in your ordination
explainvar1.p = round(plant_08.pcoa$eig[1] / sum(plant_08.pcoa$eig), 3) * 100
explainvar2.p = round(plant_08.pcoa$eig[2] / sum(plant_08.pcoa$eig), 3) * 100
explainvar3.p = round(plant_08.pcoa$eig[3] / sum(plant_08.pcoa$eig), 3) * 100
sum.eig = sum(explainvar1.p, explainvar2.p, explainvar3.p)
# plot the PCoA ordination
# Define Plot Parameters
par(mar = c(5, 5, 1, 2) + 0.1)
# Initiate Plot
plot(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
xlab = paste("PCoA 1 (", explainvar1.p, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2.p, "%)", sep = ""),
main = "Ordination for 2008",
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
# Add Axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
# Add Points & Labels
points(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
labels = plant_08$treatment)
# Identify influential species
# First we calculate the relative abundances of each species at each site
plant_08REL = plant_08_sbys
for(i in 1:nrow(plant_08_sbys )){
plant_08REL[i, ] = plant_08_sbys [i, ] / sum(plant_08_sbys [i, ])
}
# Now, we use this information to calculate and add species scores
plant_08.pcoa= add.spec.scores(plant_08.pcoa,plant_08REL,method = "pcoa.scores")
text(plant_08.pcoa$cproj[ ,1], plant_08.pcoa$cproj[ ,2],
labels = row.names(plant_08.pcoa$cproj), col = "red")
# Hypothesis Testing
# Soil treatment (either warming or N fertilization) influenced tree beta diversity during 2006.
# Multivariate Procedures for Categorical designs
# There are 40 tree species. For each year and each treatment there are 6 sites. Treatments include: 1=control, 2=warm, 3=nitrogen, 4=warm/nitrogen
# Create "Factors" vector for categorizing soil treatments
soil_treat = as.factor(plant_06[ ,3])
# Run PERMANOVA with adonis function
P_PERMA.06 = adonis(plant_06_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
plant_06_sbys = plant_06[ ,4:43]
plant_07_sbys = plant_07[ ,4:43]
plant_08_sbys = plant_08[ ,4:43]
plant_09_sbys = plant_09[ ,4:43]
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
package.list = c('vegan', 'tidyr', 'dplyr', 'codyn', 'ggplot2',
'cowplot', 'MullerPlot', 'RColorBrewer', 'reshape2', 'lubridate','wesanderson',
'TTR', 'xtable', 'multcomp', 'pander', 'png', 'grid', 'tseries', 'nlme', 'forecast', 'lsmeans')
for (package in package.list) {
if (!require(package, character.only = TRUE, quietly = TRUE)) {
install.packages(package, repos='http://cran.us.r-project.org')
library(package, character.only = TRUE) }
}
View(plant_08_sbys)
View(plant)
plant = read.csv("./Data/HF_plants.csv")
plant_sbys = plant[ ,4:43]
View(plant_sbys)
plant_06 = (filter(plant, year == 2006))
plant_07 = (filter(plant, year == 2007))
plant_08 = (filter(plant, year == 2008))
plant_09 = (filter(plant, year == 2009))
View(plant_08)
plant_06_sbys = plant_06[ ,4:43]
plant_07_sbys = plant_07[ ,4:43]
plant_08_sbys = plant_08[ ,4:43]
plant_09_sbys = plant_09[ ,4:43]
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
# Ordination
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2008.db") for 2008
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
# Calculate the variation explained by the first three axes in your ordination
explainvar1.p = round(plant_08.pcoa$eig[1] / sum(plant_08.pcoa$eig), 3) * 100
explainvar2.p = round(plant_08.pcoa$eig[2] / sum(plant_08.pcoa$eig), 3) * 100
explainvar3.p = round(plant_08.pcoa$eig[3] / sum(plant_08.pcoa$eig), 3) * 100
sum.eig = sum(explainvar1.p, explainvar2.p, explainvar3.p)
# plot the PCoA ordination
# Define Plot Parameters
par(mar = c(5, 5, 1, 2) + 0.1)
# Initiate Plot
plot(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
xlab = paste("PCoA 1 (", explainvar1.p, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2.p, "%)", sep = ""),
main = "Ordination for 2008",
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
# Add Axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
# Add Points & Labels
points(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
labels = plant_08$treatment)
# Identify influential species
# First we calculate the relative abundances of each species at each site
plant_08REL = plant_08_sbys
for(i in 1:nrow(plant_08_sbys )){
plant_08REL[i, ] = plant_08_sbys [i, ] / sum(plant_08_sbys [i, ])
}
# Now, we use this information to calculate and add species scores
plant_08.pcoa= add.spec.scores(plant_08.pcoa,plant_08REL,method = "pcoa.scores")
text(plant_08.pcoa$cproj[ ,1], plant_08.pcoa$cproj[ ,2],
labels = row.names(plant_08.pcoa$cproj), col = "red")
# Hypothesis Testing
# Soil treatment (either warming or N fertilization) influenced tree beta diversity during 2006.
# Multivariate Procedures for Categorical designs
# There are 40 tree species. For each year and each treatment there are 6 sites. Treatments include: 1=control, 2=warm, 3=nitrogen, 4=warm/nitrogen
# Create "Factors" vector for categorizing soil treatments
soil_treat = as.factor(plant_06[ ,3])
# Run PERMANOVA with adonis function
P_PERMA.06 = adonis(plant_06_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
# Calculate observed richness from time-by-species matrix
p_richness = as.data.frame(rowSums(plant[,-c(1:5)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant[,1:5,], p_richness)
# Rename column
names(p_rich.all)[6] = "richness"
# avg. richness per group
# stand. dev. per group
# num. obs. per group
# calc. std. err. mean.
p_rich.treat.plot = group_by(p_rich.all, treatment, year) %>%
summarise(mean = mean(richness), sd = sd(richness),n = n(),sem = sd/sqrt(n))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil
Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=20)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color ="black"))
plot(p_rich.plot)
ggsave("./Figures/PlantRichTime.jpeg", plot=p_rich.plot)
# 3. Perform an RM-ANOVA and construct a F-test using the AR(1)
p_rich.rm = lme(richness ~ year + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all)
summary(p_rich.rm) # Obtain F-test
anova(p_rich.rm)
# Make cleaner ANOVA table
set.caption("RMANOVA for Plant Richness Data")
pander(anova(p_rich.rm))
# Calculate observed richness from time-by-species matrix
p_richness = as.data.frame(rowSums(plant_treat[,-c(1:5)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant_treat[,1:5,], p_richness)
# Rename column
names(p_rich.all)[6] = "richness"
# avg. richness per group
# stand. dev. per group
# num. obs. per group
# calc. std. err. mean.
p_rich.treat.plot = group_by(p_rich.all, treatment, year) %>%
summarise(mean = mean(richness), sd = sd(richness),n = n(),sem = sd/sqrt(n))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil
Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=20)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color ="black"))
plot(p_rich.plot)
ggsave("./Figures/PlantRichTime.jpeg", plot=p_rich.plot)
# 3. Perform an RM-ANOVA and construct a F-test using the AR(1)
p_rich.rm = lme(richness ~ year + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all)
summary(p_rich.rm) # Obtain F-test
anova(p_rich.rm)
# Make cleaner ANOVA table
set.caption("RMANOVA for Plant Richness Data")
pander(anova(p_rich.rm))
plants.sortedT = arrange(plant, treatment)
plants.sorted = arrange(plants.sortedT,year)
plants.sortedP = arrange(plants.sortedY,plot)
my2009plants.sortedY = filter(plants.sortedY, year==2009, plot!=16 & plot!=12 & plot!=19)
#dim(my2009plants.sortedY)
sbs2009plants.sortedYt = my2009plants.sortedY[4:43]
sbs2009plants.sortedYtt = as.data.frame(sbs2009plants.sortedYt)
my2008plants.sortedY = filter(plants.sortedY, year==2008)
#dim(my2008plants.sortedY)
sbs2008plants.sortedYt = my2008plants.sortedY[4:43]
sbs2008plants.sortedYtt = as.data.frame(sbs2008plants.sortedYt)
my2007plants.sortedY = filter(plants.sortedY, year==2007)
#dim(my2007plants.sortedY)
sbs2007plants.sortedYt = my2007plants.sortedY[4:43]
sbs2007plants.sortedYtt = as.data.frame(sbs2007plants.sortedYt)
my2006plants.sortedY = filter(plants.sortedY, year==2006)
#dim(my2006plants.sortedY)
sbs2006plants.sortedYt = my2006plants.sortedY[4:43]
sbs2006plants.sortedYtt = as.data.frame(sbs2006plants.sortedYt)
soilenv=read.csv("C:\\Users\\rmoge\\GitHub\\QB2017_DivPro\\Data\\HF_soilresp.csv")
mysoilenv_holes = na.omit(soilenv,year==2009,month==1)
my2009soilenv_1 = filter(soilenv,year==2009,month==1,plot!=12 & plot!=16 & plot!=19)
co2_1 = c(my2009soilenv_1[8])
print(co2_1)
tester = c(S.obs(sbs2009plants.sortedYtt))
sbs2009_1.sobs = c(tester,tester)
toyr = cbind(data.frame(sbs2009_1.sobs, co2_1))
lmfit = lm(co2flux~sbs2009_1.sobs,data=toyr)
summary(lmfit)
plot(co2flux~sbs2009_1.sobs,data=toyr)
abline(lmfit)
temporary_soil = my2009soilenv[-9]
sbs2009soilen = na.omit(as.matrix(temporary_soil[8:11]))
mycolnames = colnames(sbs2009plants.sortedYtt, do.NULL = TRUE, prefix = "col")
# Calculate diveristy from time-by-species matrix
p_diversity = diversity(plant_treat[,-c(1:5)], "shannon")
# Create data frame with experimental design and diversity data
p_div.all = data.frame(plant_treat[,1:5,], p_diversity)
# Rename column
names(p_div.all)[6] = "diversity"
p_div.treat.plot = group_by(p_div.all, treatment, year) %>%
summarise(mean = mean(diversity), sd = sd(diversity),n = n(),sem = sd/sqrt(n))
p_div.plot = ggplot(p_div.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil
Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Shannon's Diversity Index")+
theme_classic(base_size=25)+
theme(axis.line.x = element_line(color = "black"),axis.line.y = element_line(color = "black"))
plot(p_div.plot)
ggsave("./Figures/PlantDivTime.jpeg", plot=p_div.plot)
# Perform an RM-ANOVA and construct a F-test using the AR(1)
p_div.rm = lme(diversity ~ year + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_div.all) # Look at detailed output
summary(p_div.rm) # Obtain F-test
anova(p_div.rm)
set.caption("RMANOVA for Plant Diversity Data")
pander(anova(p_div.rm))
# Calculate diveristy from time-by-species matrix
p_diversity = diversity(plant_treat[,-c(1:5)], "shannon")
# Create data frame with experimental design and diversity data
p_div.all = data.frame(plant_treat[,1:5,], p_diversity)
# Rename column
names(p_div.all)[6] = "diversity"
p_div.treat.plot = group_by(p_div.all, treatment, year) %>%
summarise(mean = mean(diversity), sd = sd(diversity),n = n(),sem = sd/sqrt(n))
p_div.plot = ggplot(p_div.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil
Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Shannon's Diversity Index")+
theme_classic(base_size=25)+
theme(axis.line.x = element_line(color = "black"),axis.line.y = element_line(color = "black"))
plot(p_div.plot)
ggsave("./Figures/PlantDivTime.jpeg", plot=p_div.plot)
# Perform an RM-ANOVA and construct a F-test using the AR(1)
p_div.rm = lme(diversity ~ year + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_div.all) # Look at detailed output
summary(p_div.rm) # Obtain F-test
anova(p_div.rm)
set.caption("RMANOVA for Plant Diversity Data")
pander(anova(p_div.rm))
View(resp)
View(resp)
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
View(resp)
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$julian = julian(resp$date)
View(resp)
resp = read.csv("./Data/HF_soilresp.csv")
View(resp)
resp$fulldate = as.Date(resp$date, format = "%m/%d/%Y")
View(resp)
resp = read.csv("./Data/HF_soilresp.csv")
resp$fulldate = as.Date(resp$date, format = "%m/%d/%Y")
nmin = read.csv("./Data/HF_nmin.csv", stringsAsFactors = FALSE)
resp = read.csv("./Data/HF_soilresp.csv", stringsAsFactors = FALSE)
temp = read.csv("./Data/HF_soiltemp.csv", stringsAsFactors = FALSE)
resp$fulldate = as.Date(resp$date, format = "%m/%d/%Y")
View(resp)
View(resp)
nmin = read.csv("./Data/HF_nmin.csv", stringsAsFactors = FALSE)
resp = read.csv("./Data/HF_soilresp.csv", stringsAsFactors = FALSE)
temp = read.csv("./Data/HF_soiltemp.csv", stringsAsFactors = FALSE)
View(resp)
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
View(resp)
nmin = read.csv("./Data/HF_nmin.csv", stringsAsFactors = FALSE)
resp = read.csv("./Data/HF_soilresp.csv", stringsAsFactors = FALSE)
temp = read.csv("./Data/HF_soiltemp.csv", stringsAsFactors = FALSE)
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
View(resp)
resp$julian = julian(resp$date)
resp.plot = qplot(julian, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Julian Day") +
ylab("Respiration")
resp.plot + theme(text = element_text(size=35), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
View(resp)
package.list = c('vegan', 'tidyr', 'dplyr', 'codyn', 'ggplot2',
'cowplot', 'MullerPlot', 'RColorBrewer','lubridate', 'reshape2', 'lubridate','wesanderson',
'TTR', 'xtable', 'multcomp', 'pander', 'png', 'grid', 'tseries', 'nlme', 'forecast', 'lsmeans')
for (package in package.list) {
if (!require(package, character.only = TRUE, quietly = TRUE)) {
install.packages(package, repos='http://cran.us.r-project.org')
library(package, character.only = TRUE) }
}
install_github("Gibbsdavidl/CatterPlots")
package.list = c('vegan', 'tidyr', 'dplyr', 'codyn', 'ggplot2',
'cowplot', 'MullerPlot', 'RColorBrewer','lubridate', 'reshape2', 'lubridate','wesanderson',
'TTR', 'xtable', 'multcomp', 'pander', 'png', 'grid', 'tseries', 'nlme', 'forecast', 'lsmeans')
for (package in package.list) {
if (!require(package, character.only = TRUE, quietly = TRUE)) {
install.packages(package, repos='http://cran.us.r-project.org')
library(package, character.only = TRUE) }
}
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$doy = yday(resp$date)
View(resp)
resp = read.csv("./Data/HF_soilresp.csv", stringsAsFactors = FALSE)
resp.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Julian Day") +
ylab("Respiration")
resp.plot + theme(text = element_text(size=35), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
resp.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Julian Day") +
ylab("Respiration")
resp.plot + theme(text = element_text(size=35), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$doy = yday(resp$date)
resp.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Julian Day") +
ylab("Respiration")
resp.plot + theme(text = element_text(size=35), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$doy = yday(resp$date)
resp.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Julian Day") +
ylab("Respiration")
resp.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
resp.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Julian Day") +
ylab("CO2 Flux")
resp.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
resp_yr.plot = qplot(doy, co2flux, data = resp, colour = as.factor(year), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_yr.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("CO2 Flux)") + theme(text = element_text(size=18))
View(temp)
resp = resp %>%
filter(year %in% c("2006", "2007", "2008", "2009"))
resp$date = as.Date(resp$date, format = "%m/%d/%Y")
resp$doy = yday(resp$date)
resp.plot = qplot(doy, co2flux, data = resp, geom="smooth") +
stat_smooth(fill="azure3", colour="mediumpurple4", size=1, alpha = 0.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line =   element_line(colour = "black")) +
xlab("Day of the Year") +
ylab("CO2 Flux")
resp.plot + theme(text = element_text(size=18), plot.title = element_text(lineheight=.8, face="bold")) + ggtitle("Soil Respiration 2006-2009")
resp_yr.plot = qplot(doy, co2flux, data = resp, colour = as.factor(year), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_yr.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("CO2 Flux)") + theme(text = element_text(size=18))
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(treatment), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("CO2 Flux)") + theme(text = element_text(size=18))
View(resp)
resp_trt.plot = qplot(doy, co2flux, data = resp, colour = as.factor(trt), geom="smooth", se=FALSE) +
stat_smooth(method ="auto",se = FALSE, formula = y ~ x, size = 1) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
resp_trt.plot + scale_colour_brewer(type="seq", palette=3) + xlab("Day of the Year") +ylab("CO2 Flux)") + theme(text = element_text(size=18))
