P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
points(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
labels = plant_06$plot
points(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
labels = plant_06$plot)
`add.spec.scores` <-function(ordi,comm,method="cor.scores",multi=1,Rscale=F,scaling="1") {
ordiscores <- scores(ordi,display="sites")
n <- ncol(comm)
p <- ncol(ordiscores)
specscores <- array(NA,dim=c(n,p))
rownames(specscores) <- colnames(comm)
colnames(specscores) <- colnames(ordiscores)
if (method == "cor.scores") {
for (i in 1:n) {
for (j in 1:p) {specscores[i,j] <- cor(comm[,i],ordiscores[,j],method="pearson")}
}
}
if (method == "wa.scores") {specscores <- wascores(ordiscores,comm)}
if (method == "pcoa.scores") {
rownames(ordiscores) <- rownames(comm)
eigenv <- ordi$eig
accounted <- sum(eigenv)
tot <- 2*(accounted/ordi$GOF[2])-(accounted/ordi$GOF[1])
eigen.var <- eigenv/(nrow(comm)-1)
neg <- length(eigenv[eigenv<0])
pos <- length(eigenv[eigenv>0])
tot <- tot/(nrow(comm)-1)
eigen.percen <- 100*eigen.var/tot
eigen.cumpercen <- cumsum(eigen.percen)
constant <- ((nrow(comm)-1)*tot)^0.25
ordiscores <- ordiscores * (nrow(comm)-1)^-0.5 * tot^-0.5 * constant
p1 <- min(p, pos)
for (i in 1:n) {
for (j in 1:p1) {
specscores[i,j] <- cor(comm[,i],ordiscores[,j])*sd(comm[,i])/sd(ordiscores[,j])
if(is.na(specscores[i,j])) {specscores[i,j]<-0}
}
}
if (Rscale==T && scaling=="2") {
percen <- eigen.var/tot
percen <- percen^0.5
ordiscores <- sweep(ordiscores,2,percen,"/")
specscores <- sweep(specscores,2,percen,"*")
}
if (Rscale==F) {
specscores <- specscores / constant
ordiscores <- ordi$points
}
ordi$points <- ordiscores
ordi$eig <- eigen.var
ordi$eig.percen <- eigen.percen
ordi$eig.cumpercen <- eigen.cumpercen
ordi$eigen.total <- tot
ordi$R.constant <- constant
ordi$Rscale <- Rscale
ordi$scaling <- scaling
}
specscores <- specscores * multi
ordi$cproj <- specscores
return(ordi)
}
# Ordination
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2006.db") for 2006
plant_06.db = vegdist(plant_06_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_06.pcoa = cmdscale(plant_06.db, eig = TRUE, k = 3)
# Calculate the variation explained by the first three axes in your ordination
explainvar1.p = round(plant_06.pcoa$eig[1] / sum(plant_06.pcoa$eig), 3) * 100
explainvar2.p = round(plant_06.pcoa$eig[2] / sum(plant_06.pcoa$eig), 3) * 100
explainvar3.p = round(plant_06.pcoa$eig[3] / sum(plant_06.pcoa$eig), 3) * 100
sum.eig = sum(explainvar1.p, explainvar2.p, explainvar3.p)
# plot the PCoA ordination
# Define Plot Parameters
par(mar = c(5, 5, 1, 2) + 0.1)
# Initiate Plot
plot(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
xlab = paste("PCoA 1 (", explainvar1.p, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2.p, "%)", sep = ""),
main = "Ordination for 2006",
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
# Add Axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
# Add Points & Labels
points(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
labels = plant_06$plot)
# Identify influential species
# First we calculate the relative abundances of each species at each site
plant_06REL = plant_06_sbys
for(i in 1:nrow(plant_06_sbys )){
plant_06REL[i, ] = plant_06_sbys [i, ] / sum(plant_06_sbys [i, ])
}
# Now, we use this information to calculate and add species scores
plant_06.pcoa= add.spec.scores(plant_06.pcoa,plant_06REL,method = "pcoa.scores")
text(plant_06.pcoa$cproj[ ,1], plant_06.pcoa$cproj[ ,2],
labels = plant_06$plot, col = "black")
# Hypothesis Testing
# Soil treatment (either warming or N fertilization) influenced tree beta diversity during 2006.
# Multivariate Procedures for Categorical designs
# There are 40 tree species. For each year and each treatment there are 6 sites. Treatments include: 1=control, 2=warm, 3=nitrogen, 4=warm/nitrogen
# Create "Factors" vector for categorizing soil treatments
soil_treat = as.factor(plant_06[ ,3])
# Run PERMANOVA with adonis function
P_PERMA.06 = adonis(plant_06_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
plant_06REL = plant_06_sbys
for(i in 1:nrow(plant_06_sbys )){
plant_06REL[i, ] = plant_06_sbys [i, ] / sum(plant_06_sbys [i, ])
}
View(plant_06REL)
# Making the Site by Species Matrix for plant and ant data sets
plant_sbys = plant[ ,4:43]
ant_sbys = ant[ ,4:18]
# Subsetting the data into the different years
plant_06 = (filter(plant, year == 2006))
plant_07 = (filter(plant, year == 2007))
plant_08 = (filter(plant, year == 2008))
plant_09 = (filter(plant, year == 2009))
ant_06 = filter(ant, year == 2006)
ant_07 = filter(ant, year == 2007)
ant_08 = filter(ant, year == 2008)
ant_09 = filter(ant, year == 2009)
# Separating out the treatments from the site by species matricies
plant_06_sbys = plant_06[ ,4:43]
plant_07_sbys = plant_07[ ,4:43]
plant_08_sbys = plant_08[ ,4:43]
plant_09_sbys = plant_09[ ,4:43]
ant_06_sbys = ant_06[ ,4:18]
ant_07_sbys = ant_07[ ,4:18]
ant_08_sbys = ant_08[ ,4:18]
ant_09_sbys = ant_09[ ,4:18]
# Ordination
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2006.db") for 2006
plant_06.db = vegdist(plant_06_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_06.pcoa = cmdscale(plant_06.db, eig = TRUE, k = 3)
# Calculate the variation explained by the first three axes in your ordination
explainvar1.p = round(plant_06.pcoa$eig[1] / sum(plant_06.pcoa$eig), 3) * 100
explainvar2.p = round(plant_06.pcoa$eig[2] / sum(plant_06.pcoa$eig), 3) * 100
explainvar3.p = round(plant_06.pcoa$eig[3] / sum(plant_06.pcoa$eig), 3) * 100
sum.eig = sum(explainvar1.p, explainvar2.p, explainvar3.p)
# plot the PCoA ordination
# Define Plot Parameters
par(mar = c(5, 5, 1, 2) + 0.1)
# Initiate Plot
plot(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
xlab = paste("PCoA 1 (", explainvar1.p, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2.p, "%)", sep = ""),
main = "Ordination for 2006",
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
# Add Axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
# Add Points & Labels
points(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
labels = plant_06$plot)
# Identify influential species
# First we calculate the relative abundances of each species at each site
plant_06REL = plant_06_sbys
for(i in 1:nrow(plant_06_sbys )){
plant_06REL[i, ] = plant_06_sbys [i, ] / sum(plant_06_sbys [i, ])
}
# Now, we use this information to calculate and add species scores
plant_06.pcoa= add.spec.scores(plant_06.pcoa,plant_06REL,method = "pcoa.scores")
text(plant_06.pcoa$cproj[ ,1], plant_06.pcoa$cproj[ ,2],
labels = row.names(plant_06.pcoa$cproj), col = "black")
# Hypothesis Testing
# Soil treatment (either warming or N fertilization) influenced tree beta diversity during 2006.
# Multivariate Procedures for Categorical designs
# There are 40 tree species. For each year and each treatment there are 6 sites. Treatments include: 1=control, 2=warm, 3=nitrogen, 4=warm/nitrogen
# Create "Factors" vector for categorizing soil treatments
soil_treat = as.factor(plant_06[ ,3])
# Run PERMANOVA with adonis function
P_PERMA.06 = adonis(plant_06_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
View(plant_06REL)
plant_06.pcoa= add.spec.scores(plant_06.pcoa,plant_06REL,method = "pcoa.scores")
text(plant_06.pcoa$cproj[ ,1], plant_06.pcoa$cproj[ ,2],
labels = row.names(plant_06.pcoa$cproj), col = "red")
View(plant)
points(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
labels = plant_06$treatment)
# Ordination
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2006.db") for 2006
plant_06.db = vegdist(plant_06_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_06.pcoa = cmdscale(plant_06.db, eig = TRUE, k = 3)
# Calculate the variation explained by the first three axes in your ordination
explainvar1.p = round(plant_06.pcoa$eig[1] / sum(plant_06.pcoa$eig), 3) * 100
explainvar2.p = round(plant_06.pcoa$eig[2] / sum(plant_06.pcoa$eig), 3) * 100
explainvar3.p = round(plant_06.pcoa$eig[3] / sum(plant_06.pcoa$eig), 3) * 100
sum.eig = sum(explainvar1.p, explainvar2.p, explainvar3.p)
# plot the PCoA ordination
# Define Plot Parameters
par(mar = c(5, 5, 1, 2) + 0.1)
# Initiate Plot
plot(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
xlab = paste("PCoA 1 (", explainvar1.p, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2.p, "%)", sep = ""),
main = "Ordination for 2006",
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
# Add Axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
# Add Points & Labels
points(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_06.pcoa$points[ ,1], plant_06.pcoa$points[ ,2],
labels = plant_06$treatment)
# Identify influential species
# First we calculate the relative abundances of each species at each site
plant_06REL = plant_06_sbys
for(i in 1:nrow(plant_06_sbys )){
plant_06REL[i, ] = plant_06_sbys [i, ] / sum(plant_06_sbys [i, ])
}
# Now, we use this information to calculate and add species scores
plant_06.pcoa= add.spec.scores(plant_06.pcoa,plant_06REL,method = "pcoa.scores")
text(plant_06.pcoa$cproj[ ,1], plant_06.pcoa$cproj[ ,2],
labels = row.names(plant_06.pcoa$cproj), col = "red")
# Hypothesis Testing
# Soil treatment (either warming or N fertilization) influenced tree beta diversity during 2006.
# Multivariate Procedures for Categorical designs
# There are 40 tree species. For each year and each treatment there are 6 sites. Treatments include: 1=control, 2=warm, 3=nitrogen, 4=warm/nitrogen
# Create "Factors" vector for categorizing soil treatments
soil_treat = as.factor(plant_06[ ,3])
# Run PERMANOVA with adonis function
P_PERMA.06 = adonis(plant_06_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
# Ordination
# construct a resemblance matrix based on Bray-Curtis Distance ("plant_2006.db") for 2006
plant_08.db = vegdist(plant_08_sbys, method = "bray", upper = TRUE, diag = TRUE)
# Perform a Principal Coordinates Analysis to visualize beta-diversity
plant_08.pcoa = cmdscale(plant_08.db, eig = TRUE, k = 3)
# Calculate the variation explained by the first three axes in your ordination
explainvar1.p = round(plant_08.pcoa$eig[1] / sum(plant_08.pcoa$eig), 3) * 100
explainvar2.p = round(plant_08.pcoa$eig[2] / sum(plant_08.pcoa$eig), 3) * 100
explainvar3.p = round(plant_08.pcoa$eig[3] / sum(plant_08.pcoa$eig), 3) * 100
sum.eig = sum(explainvar1.p, explainvar2.p, explainvar3.p)
# plot the PCoA ordination
# Define Plot Parameters
par(mar = c(5, 5, 1, 2) + 0.1)
# Initiate Plot
plot(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
xlab = paste("PCoA 1 (", explainvar1.p, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2.p, "%)", sep = ""),
main = "Ordination for 2008",
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
# Add Axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
# Add Points & Labels
points(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
pch = 16, cex = 3, bg = "gray", col = "gray")
text(plant_08.pcoa$points[ ,1], plant_08.pcoa$points[ ,2],
labels = plant_08$treatment)
# Identify influential species
# First we calculate the relative abundances of each species at each site
plant_08REL = plant_08_sbys
for(i in 1:nrow(plant_08_sbys )){
plant_08REL[i, ] = plant_08_sbys [i, ] / sum(plant_08_sbys [i, ])
}
# Now, we use this information to calculate and add species scores
plant_08.pcoa= add.spec.scores(plant_08.pcoa,plant_08REL,method = "pcoa.scores")
text(plant_08.pcoa$cproj[ ,1], plant_08.pcoa$cproj[ ,2],
labels = row.names(plant_08.pcoa$cproj), col = "red")
# Hypothesis Testing
# Soil treatment (either warming or N fertilization) influenced tree beta diversity during 2006.
# Multivariate Procedures for Categorical designs
# There are 40 tree species. For each year and each treatment there are 6 sites. Treatments include: 1=control, 2=warm, 3=nitrogen, 4=warm/nitrogen
# Create "Factors" vector for categorizing soil treatments
soil_treat = as.factor(plant_06[ ,3])
# Run PERMANOVA with adonis function
P_PERMA.06 = adonis(plant_06_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.07 = adonis(plant_07_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.08 = adonis(plant_08_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.09 = adonis(plant_09_sbys ~ soil_treat, method = "bray", permutations = 999)
P_PERMA.06
P_PERMA.07
P_PERMA.08
P_PERMA.09
knitr::opts_chunk$set(echo = TRUE)
clr = function() {
ENV = globalenv()
ll = ls(envir = ENV)
ll = ll[ll != "clr"]
rm(list = ll, envir = ENV)
}
getwd()
setwd("/Users/bhbeidler/GitHub/QB2017_DivPro")
package.list = c('vegan', 'tidyr', 'dplyr', 'codyn', 'ggplot2',
'cowplot', 'MullerPlot', 'RColorBrewer', 'reshape2', 'lubridate','wesanderson',
'TTR', 'xtable', 'multcomp', 'pander', 'png', 'grid', 'tseries', 'nlme', 'forecast', 'lsmeans')
for (package in package.list) {
if (!require(package, character.only = TRUE, quietly = TRUE)) {
install.packages(package, repos='http://cran.us.r-project.org')
library(package, character.only = TRUE) }
}
plant = read.csv("./Data/HF_plants.csv")
nmin = read.csv("./Data/HF_nmin.csv")
resp = read.csv("./Data/HF_soilresp.csv")
temp = read.csv("./Data/HF_soiltemp.csv")
# Making the Site by Species Matrix for plant and ant data sets
plant_sbys = plant[ ,6:43]
# Subsetting the data into the different years
plant_06 = (filter(plant, year == 2006))
plant_07 = (filter(plant, year == 2007))
plant_08 = (filter(plant, year == 2008))
plant_09 = (filter(plant, year == 2009))
# Separating out the treatments from the site by species matricies
plant_06_sbys = plant_06[ ,6:43]
plant_07_sbys = plant_07[ ,6:43]
plant_08_sbys = plant_08[ ,6:43]
plant_09_sbys = plant_09[ ,6:43]
View(plant)
p_rich.rm = lme(richness ~ year * heat_treat * N_treat , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all) # Look at detailed output
summary(p_rich.rm
# Calculate observed richness from time-by-species matrix
p_richness = as.data.frame(rowSums(plant[,-c(1:3)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant[,1:3,], p_richness)
# Rename column
names(p_rich.all)[4] = "richness"
# avg. richness per group
# stand. dev. per group
# num. obs. per group
# calc. std. err. mean.
p_rich.treat.plot = group_by(p_rich.all, treatment, year) %>%
summarise(mean = mean(richness), sd = sd(richness),n = n(),sem = sd/sqrt(n))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil  Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=20)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black"))
plot(p_rich.plot)
ggsave("./PlantRichTime.jpeg", plot=p_rich.plot)
# 3. Perform an RM-ANOVA and construct a F-test using the AR(1)
p_rich.rm = lme(richness ~ year * heat_treat * N_treat , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all) # Look at detailed output
summary(p_rich.rm) # Obtain F-test
anova(p_rich.rm)
# Make cleaner ANOVA table
set.caption("RMANOVA for Plant Richness Data")
pander(anova(p_rich.rm))
# Calculate observed richness from time-by-species matrix
p_richness = as.data.frame(rowSums(plant[,-c(1:5)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant[,1:3,], p_richness)
# Rename column
names(p_rich.all)[4] = "richness"
# avg. richness per group
# stand. dev. per group
# num. obs. per group
# calc. std. err. mean.
p_rich.treat.plot = group_by(p_rich.all, treatment, year) %>%
summarise(mean = mean(richness), sd = sd(richness),n = n(),sem = sd/sqrt(n))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil  Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=20)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black"))
plot(p_rich.plot)
ggsave("./PlantRichTime.jpeg", plot=p_rich.plot)
# 3. Perform an RM-ANOVA and construct a F-test using the AR(1)
p_rich.rm = lme(richness ~ year * heat_treat * N_treat , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all) # Look at detailed output
summary(p_rich.rm) # Obtain F-test
anova(p_rich.rm)
# Make cleaner ANOVA table
set.caption("RMANOVA for Plant Richness Data")
pander(anova(p_rich.rm))
# Calculate observed richness from time-by-species matrix
p_richness = as.data.frame(rowSums(plant[,-c(1:5)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant[,1:5,], p_richness)
# Rename column
names(p_rich.all)[4] = "richness"
# avg. richness per group
# stand. dev. per group
# num. obs. per group
# calc. std. err. mean.
p_rich.treat.plot = group_by(p_rich.all, treatment, year) %>%
summarise(mean = mean(richness), sd = sd(richness),n = n(),sem = sd/sqrt(n))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil  Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=20)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black"))
plot(p_rich.plot)
ggsave("./PlantRichTime.jpeg", plot=p_rich.plot)
# 3. Perform an RM-ANOVA and construct a F-test using the AR(1)
p_rich.rm = lme(richness ~ year * heat_treat * N_treat , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all) # Look at detailed output
summary(p_rich.rm) # Obtain F-test
anova(p_rich.rm)
# Make cleaner ANOVA table
set.caption("RMANOVA for Plant Richness Data")
pander(anova(p_rich.rm))
View(p_rich.all)
p_richness = as.data.frame(rowSums(plant[,-c(1:5)] > 0))
View(p_richness)
p_richness = as.data.frame(rowSums(plant[,-c(1:5)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant[,1:5,], p_richness)
View(p_rich.all)
p_richness = as.data.frame(rowSums(plant[,-c(1:5)] > 0))
# Create data frame with experimental design and richness data
p_rich.all = data.frame(plant[,1:5,], p_richness)
# Rename column
names(p_rich.all)[6] = "richness"
View(p_rich.all)
p_rich.rm = lme(richness ~ year * heat_treat * N_treat , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all) # Look at detailed output
summary(p_rich.rm)
p_rich.rm = lme(richness ~ year + heat_treat + N_treat * heat_treat * N_treat * year , random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_rich.all)
summary(p_rich.rm)
anova(p_rich.rm)
# Calculate diveristy from time-by-species matrix
p_diversity = diversity(plant[,-c(1:5)], "shannon")
# Create data frame with experimental design and diversity data
p_div.all = data.frame(plant[,1:5,], p_diversity)
# Rename column
names(p_div.all)[6] = "diversity"
p_div.treat.plot = group_by(p_div.all, treatment, year) %>%
summarise(mean = mean(diversity), sd = sd(diversity),n = n(),sem = sd/sqrt(n))
p_div.plot = ggplot(p_div.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil  Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Shannon's Diversity Index")+
theme_classic(base_size=25)+
theme(axis.line.x = element_line(color = "black"),                  axis.line.y = element_line(color = "black"))
plot(p_div.plot)
ggsave("./PlantDivTime.jpeg", plot=p_div.plot)
# Perform an RM-ANOVA and construct a F-test using the AR(1)
p_div.rm = lme(diversity ~ year + heat_treat + N_treat * heat_treat * N_treat * year, random = ~ 1 | plot, correlation = corAR1(form = ~ 1 | plot),data = p_div.all) # Look at detailed output
summary(p_div.rm) # Obtain F-test
anova(p_div.rm)
set.caption("RMANOVA for Plant Diversity Data")
pander(anova(p_div.rm))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil
Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=20)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color =
"black"))
plot(p_rich.plot)
ggsave("./PlantRichTime.jpeg", plot=p_rich.plot)
# calc. std. err. mean.
p_rich.treat.plot = group_by(p_rich.all, treatment, year) %>%
summarise(mean = mean(richness), sd = sd(richness),n = n(),sem = sd/sqrt(n))
p_rich.plot = ggplot(p_rich.treat.plot, aes(x = year, y = mean, color = as.factor(treatment))) +
geom_point(size = 2, show.legend = T) +
geom_line(size = 0.75) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = .1) +
scale_color_manual(values = wes_palette("Moonrise1", 4, type = "discrete"),name="Soil
Treatment",labels=c("Control", "Heated", "Heated plus Nitrogen", "Nitrogen")) +
xlim(2006, 2009) + xlab("Year") + ylab("Richness") +
theme_classic(base_size=20)+
theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color ="black"))
plot(p_rich.plot)
